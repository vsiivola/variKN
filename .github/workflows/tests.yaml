name: Run tests

on: [push, pull_request]

jobs:

  build-and-test:

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            python-version: 3.9
            boost_platform: 22.04
            boost_version: 1.81.0
            arch: 'x86'
            toolset: 'gcc'
          - os: ubuntu-22.04
            python-version: '3.10'
            boost_platform: 22.04
            boost_version: 1.81.0
            arch: 'x86'
            toolset: 'gcc'
          - os: ubuntu-24.04
            python-version: '3.11'
            boost_platform: 24.04
            boost_version: 1.88.0
            arch: 'x86'
            toolset: 'gcc'
          - os: ubuntu-24.04
            python-version: '3.12'
            boost_platform: 24.04
            boost_version: 1.88.0
            arch: 'x86'
            toolset: 'gcc'
          - os: macos-14
            python-version: '3.9'
            boost_platform: 14
            boost_version: 1.88.0
            arch: 'aarch64'
            toolset: 'clang'
          - os: macos-15
            python-version: '3.11'
            boost_platform: 15
            boost_version: 1.88.0
            arch: 'aarch64'
            toolset: 'clang'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install boost
        uses: MarkusJx/install-boost@v2.5.0
        id: install-boost
        with:
            # REQUIRED: Specify the required boost version
            # A list of supported versions can be found here:
            # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
            boost_version: ${{ matrix.boost_version }}
            # OPTIONAL: Specify a platform version
            platform_version: ${{ matrix.boost_platform }}
            arch: ${{ matrix.arch }}
            toolset: ${{ matrix.toolset }}
      - name: Install SWIG via Homebrew
        if: runner.arch == 'ARM64'
        run: brew install swig
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTING=1
          cmake --build .
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      - name: Binary test
        run: make test
        working-directory: ./build/tests
      - name: Python test
        run: make test
        working-directory: ./build/python-wrapper/tests
